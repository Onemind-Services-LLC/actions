name: Docker Build

on:
  workflow_call:
    inputs:
      images:
        description: 'Docker images to build (multi-line string, one image per line)'
        required: true
        type: string
      file:
        description: 'Path to the Dockerfile'
        required: false
        type: string
        default: './Dockerfile'
      build-args:
        description: 'Build arguments (multi-line string, KEY=VALUE format)'
        required: false
        type: string
        default: ''
      cache-from:
        description: 'Cache source specification'
        required: false
        type: string
        default: ''
      cache-to:
        description: 'Cache destination specification'
        required: false
        type: string
        default: ''
      registry:
        description: 'Docker registry to push images to'
        required: false
        type: string
        default: 'registry.onemindservices.com'


jobs:
  docker_build:
    name: Docker Build
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.9.1

      - name: Login to Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.registry }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ inputs.images }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern=v{{major}}

      - name: Build and push
        uses: docker/build-push-action@v6
        id: docker_build
        with:
          push: true
          file: ${{ inputs.file }}
          tags: ${{ steps.meta.outputs.tags }}
          build-args: ${{ inputs.build-args }}
          secrets: |
            "github_token=${{ secrets.GIT_TOKEN }}"
          cache-from: ${{ inputs.cache-from }}
          cache-to: ${{ inputs.cache-to }}

      - name: Sign image with a key
        run: |
          images=""
          for tag in ${TAGS}; do
            images+="${tag}@${DIGEST} "
          done
          cosign sign --yes --key env://COSIGN_PRIVATE_KEY ${images}
        env:
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.docker_build.outputs.digest }}