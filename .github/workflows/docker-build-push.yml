name: Docker Build + Push + Sign

on:
  workflow_call:
    inputs:
      runs-on:
        description: GitHub runner label
        required: false
        default: 'ubuntu-22.04-sh'
        type: string
      push:
        description: >-
          Whether to push images (override). Accepts 'true' or 'false'.
          If omitted, defaults to pushing only on the repository's
          default branch.
        required: false
        default: ''
        type: string
      image:
        description: Base image name (e.g., registry.example.com/org/app)
        required: true
        type: string
      meta-tags:
        description: docker/metadata-action tags rules (newline-separated)
        required: false
        default: |
          type=ref,event=branch
          type=ref,event=pr
          type=ref,event=tag
          type=sha
        type: string
      annotations:
        description: Additional newline-separated OCI annotations to merge with docker/metadata-action output
        required: false
        default: ''
        type: string
      build-args:
        description: Newline-separated build args (KEY=VALUE)
        required: false
        default: ''
        type: string
      build-secrets:
        description: Newline-separated build secrets (KEY=VALUE). Forwarded to Buildx as secrets.
        required: false
        default: ''
        type: string
      cache-image:
        description: Registry reference used by Buildx cache (e.g., ghcr.io/org/app:buildcache-main)
        required: true
        type: string
      org-token:
        description: "If 'true', generate a GitHub App installation token and pass as build secret GITHUB_TOKEN=..."
        required: false
        default: 'false'
        type: string
      app-id:
        description: GitHub App ID used to mint installation tokens (only when org-token is 'true')
        required: false
        type: string
      registry:
        description: Registry hostname for login (e.g., ghcr.io)
        required: true
        type: string
    secrets:
      private-key:
        description: GitHub App private key (PEM) used to mint installation tokens
        required: false
      username:
        description: Registry username
        required: true
      password:
        description: Registry password/token
        required: true

permissions:
  contents: read
  id-token: write

jobs:
  build:
    name: Build
    runs-on: ${{ inputs.runs-on }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Decide whether to push
        id: decide-push
        shell: bash
        env:
          INPUT_PUSH: ${{ inputs.push }}
          DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
          REF_NAME: ${{ github.ref_name }}
        run: |
          if [[ -n "${INPUT_PUSH}" ]]; then
            case "${INPUT_PUSH}" in
              true|false)
                echo "value=${INPUT_PUSH}" >> "$GITHUB_OUTPUT" ;;
              *)
                echo "Invalid inputs.push: '${INPUT_PUSH}'. Expected 'true' or 'false'." >&2
                exit 1 ;;
            esac
          else
            if [[ "${REF_NAME}" == "${DEFAULT_BRANCH}" ]]; then
              echo "value=true" >> "$GITHUB_OUTPUT"
            else
              echo "value=false" >> "$GITHUB_OUTPUT"
            fi
          fi

      - name: Create repository token
        id: org_token
        if: inputs.org-token == 'true'
        uses: Onemind-Services-LLC/actions/actions/create-repo-token@master
        with:
          app-id: ${{ inputs.app-id }}
          private-key: ${{ secrets.private-key }}
          owner: Onemind-Services-LLC
          github-token: ${{ github.actor == 'dependabot[bot]' && github.token || '' }}

      - name: Merge user build-secrets with org token
        id: merged_secrets
        shell: bash
        env:
          USER_SECRETS: ${{ inputs.build-secrets }}
          ORG_TOKEN: ${{ steps.org_token.outputs.token }}
        run: |
          {
            if [ -n "${USER_SECRETS}" ]; then printf '%s\n' "${USER_SECRETS}"; fi
            if [ -n "${ORG_TOKEN:-}" ]; then printf 'github_token=%s\n' "${ORG_TOKEN}"; fi
          } | awk 'NF' > merged_secrets.txt
          echo "value<<EOF" >> "$GITHUB_OUTPUT"
          cat merged_secrets.txt >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"

      - name: Build, push, sign
        uses: Onemind-Services-LLC/actions/actions/docker-build-push@master
        with:
          images: ${{ inputs.image }}
          meta-tags: ${{ inputs.meta-tags }}
          annotations: ${{ inputs.annotations }}
          push: ${{ steps.decide-push.outputs.value }}
          build-args: ${{ inputs.build-args }}
          build-secrets: ${{ steps.merged_secrets.outputs.value }}
          cache-image: ${{ inputs.cache-image }}
          registry: ${{ inputs.registry }}
          username: ${{ secrets.username }}
          password: ${{ secrets.password }}
