name: Python Library Tests
description: Run mypy type checks and pytest with coverage for Python libraries.

inputs:
  python-version:
    description: Python version to set up (e.g., '3.12', '3.11').
    required: false
    default: '3.x'
  working-directory:
    description: Directory to run installs and tests from
    required: false
    default: '.'
  install-editable:
    description: Install the package in editable mode (pip install -e .) if setup.py/pyproject.toml exists
    required: false
    default: 'true'
  mypy:
    description: Run mypy type checks
    required: false
    default: 'true'
  mypy-targets:
    description: Space-separated paths/modules to check with mypy (ignored when empty and a mypy config file is present)
    required: false
    default: '.'
  mypy-args:
    description: Extra arguments passed to mypy
    required: false
    default: ''
  pytest-args:
    description: Extra arguments passed to pytest
    required: false
    default: ''
  coverage-report:
    description: Post a Cobertura coverage report comment on PRs
    required: false
    default: 'false'
  coverage-file:
    description: Path to coverage XML file
    required: false
    default: 'coverage.xml'
  coverage-reporter-token:
    description: Token for cobertura reporter (defaults to GITHUB_TOKEN)
    required: true
    default: ''
  coverage-minimum:
    description: Minimum coverage percentage threshold
    required: false
    default: '80'
  coverage-fail-below-threshold:
    description: Fail when below minimum coverage
    required: false
    default: 'true'
  coverage-show-line:
    description: Show line coverage column
    required: false
    default: 'true'
  coverage-show-branch:
    description: Show branch coverage column
    required: false
    default: 'true'
  coverage-show-class-names:
    description: Show class names instead of file names
    required: false
    default: 'false'
  coverage-show-missing:
    description: Show missing lines per module
    required: false
    default: 'true'
  coverage-only-changed-files:
    description: Only show coverage for changed files on PRs
    required: false
    default: 'false'
  coverage-report-name:
    description: Unique name for the report/comment
    required: false
    default: ''
  coverage-pull-request-number:
    description: Pull request number when not using pull_request trigger
    required: false
    default: ''
  coverage-continue-on-error:
    description: Continue on error when posting report
    required: false
    default: 'true'

runs:
  using: composite
  steps:
    - name: Set Up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.python-version }}
        cache: 'pip'
        cache-dependency-path: |
          ${{ inputs.working-directory }}/setup.py
          ${{ inputs.working-directory }}/requirements*.txt
          ${{ inputs.working-directory }}/pyproject.toml

    - name: Install From requirements.txt
      if: hashFiles(format('{0}/requirements.txt', inputs.working-directory))
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: pip install -r requirements.txt

    - name: Install From requirements-dev.txt
      if: hashFiles(format('{0}/requirements-dev.txt', inputs.working-directory))
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: pip install -r requirements-dev.txt

    - name: Install From requirements_dev.txt
      if: hashFiles(format('{0}/requirements_dev.txt', inputs.working-directory))
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: pip install -r requirements_dev.txt

    - name: Install Test Tooling
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov mypy coverage

    - name: Install Package (editable)
      if: ${{ inputs.install-editable == 'true' }}
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        if [ -f "setup.py" ] || [ -f "pyproject.toml" ]; then
          pip install -e .
        else
          echo "No setup.py or pyproject.toml found. Skipping editable install."
        fi

    - name: Type Check (mypy)
      if: ${{ inputs.mypy == 'true' }}
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        set -e
        mypy --version
        if [ -f "mypy.ini" ] || grep -q "\[mypy\]" setup.cfg 2>/dev/null || grep -q "\[tool.mypy\]" pyproject.toml 2>/dev/null; then
          echo "Detected mypy configuration. Running 'mypy' with config."
          mypy ${{ inputs.mypy-args }}
        else
          echo "No mypy config detected. Running on provided targets."
          mypy ${{ inputs.mypy-args }} ${{ inputs.mypy-targets }}
        fi

    - name: Run tests with coverage
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        coverage run -m pytest -q ${{ inputs.pytest-args }}
        coverage report

    - name: Generate coverage XML
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: coverage xml

    - name: Coverage Reporter
      if: ${{ inputs.coverage-report == 'true' }}
      continue-on-error: ${{ inputs.coverage-continue-on-error == 'true' }}
      uses: Onemind-Services-LLC/actions/actions/cobertura-report@master
      with:
        repo-token: ${{ inputs.coverage-reporter-token }}
        path: ${{ inputs.coverage-file }}
        skip-covered: ${{ inputs.coverage-skip-covered }}
        minimum-coverage: ${{ inputs.coverage-minimum }}
        fail-below-threshold: ${{ inputs.coverage-fail-below-threshold }}
        show-line: ${{ inputs.coverage-show-line }}
        show-branch: ${{ inputs.coverage-show-branch }}
        show-class-names: ${{ inputs.coverage-show-class-names }}
        show-missing: ${{ inputs.coverage-show-missing }}
        only-changed-files: ${{ inputs.coverage-only-changed-files }}
        report-name: ${{ inputs.coverage-report-name }}
        pull-request-number: ${{ inputs.coverage-pull-request-number }}

branding:
  icon: check-circle
  color: blue
