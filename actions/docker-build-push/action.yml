name: Docker Build, Push, and Sign
description: Build a Docker image with Buildx, optionally push it, and keyless-sign with Cosign.

inputs:
  images:
    description: Base image name(s) for metadata (e.g., registry/org/app). Used to generate tags.
    required: true
  push:
    description: Whether to push the image
    required: false
    default: 'true'
  build-args:
    description: Newline-separated build args (KEY=VALUE)
    required: false
    default: ''
  cache-image:
    required: true
    default: ''
  annotations:
    description: Additional newline-separated OCI annotations to merge with metadata-action output
    required: false
    default: ''
  meta-tags:
    description: docker/metadata-action tags rules
    required: false
    default: |
      type=ref,event=branch
      type=ref,event=pr
      type=ref,event=tag
      type=semver,pattern={{version}}
      type=sha
  registry:
    description: Registry hostname for login
    required: true
  username:
    description: Registry username
    required: true
  password:
    description: Registry password or token
    required: true

outputs:
  digest:
    description: Built image digest from buildx
    value: ${{ steps.build.outputs.digest }}

runs:
  using: composite
  steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ inputs.images }}
        tags: ${{ inputs.meta-tags }}
      env:
        DOCKER_METADATA_ANNOTATIONS_LEVELS: manifest

    - name: Login to Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.registry }}
        username: ${{ inputs.username }}
        password: ${{ inputs.password }}


    - name: Merge annotations
      id: annotations
      shell: bash
      run: |
        set -euo pipefail
        meta_annotations=${{ toJSON(steps.meta.outputs.annotations) }}
        user_annotations=${{ toJSON(inputs.annotations) }}
        # Strip surrounding quotes added by toJSON
        meta_annotations=${meta_annotations:1:${#meta_annotations}-2}
        user_annotations=${user_annotations:1:${#user_annotations}-2}
        # Expand escaped newlines
        meta_annotations=${meta_annotations//\\n/$'\n'}
        user_annotations=${user_annotations//\\n/$'\n'}
        {
          if [ -n "$meta_annotations" ]; then printf '%s\n' "$meta_annotations"; fi
          if [ -n "$user_annotations" ]; then printf '%s\n' "$user_annotations"; fi
        } | awk 'NF' > merged_annotations.txt
        echo "annotations<<EOF" >> "$GITHUB_OUTPUT"
        cat merged_annotations.txt >> "$GITHUB_OUTPUT"
        echo "EOF" >> "$GITHUB_OUTPUT"

    - name: Build and push
      id: build
      uses: docker/build-push-action@v6
      with:
        context: .
        file: Dockerfile
        push: ${{ inputs.push == 'true' }}
        tags: ${{ steps.meta.outputs.tags }}
        build-args: ${{ inputs.build-args }}
        labels: ${{ steps.meta.outputs.labels }}
        annotations: ${{ steps.annotations.outputs.annotations }}
        provenance: mode=max
        sbom: ${{ inputs.push == 'true' }}
        cache-from: type=registry,ref=${{ inputs.cache-image }},ignore-error=true
        cache-to: type=registry,ref=${{ inputs.cache-image }},mode=max,ignore-error=true

    - name: Sign images
      if: inputs.push == 'true' && steps.build.outputs.digest
      uses: Onemind-Services-LLC/actions/actions/cosign-sign@master
      with:
        mode: docker
        docker-images: ${{ steps.meta.outputs.tags }}
        docker-digest: ${{ steps.build.outputs.digest }}
