name: Docker Build, Push, and Sign
description: Build a Docker image with Buildx, optionally push it, and keyless-sign with Cosign.

inputs:
  images:
    description: Base image name(s) for metadata (e.g., registry/org/app). Used to generate tags.
    required: true
  push:
    description: Whether to push the image
    required: false
    default: 'true'
  build-args:
    description: Newline-separated build args (KEY=VALUE)
    required: false
    default: ''
  build-secrets:
    description: Newline-separated build secrets (KEY=VALUE). Passed to Buildx as secrets.
    required: false
    default: ''
  cache-image:
    description: Registry reference to use for Buildx cache (e.g., ghcr.io/org/app:buildcache-main)
    required: true
  annotations:
    description: Additional newline-separated OCI annotations to merge with docker/metadata-action output
    required: false
    default: ''
  labels:
    description: Additional newline-separated labels to merge with docker/metadata-action output
    required: false
    default: ''
  meta-tags:
    description: docker/metadata-action tag rules
    required: false
    default: |
      type=ref,event=branch
      type=ref,event=pr
      type=ref,event=tag
      type=semver,pattern={{version}}
      type=sha
  authors:
    description: Comma-separated list of image authors
    required: false
    default: 'Abhimanyu Saharan'
  context:
    description: Build context (defaults to current directory)
    required: false
    default: .
  file:
    description: Dockerfile path (defaults to 'Dockerfile' in the context)
    required: false
    default: Dockerfile
  registry:
    description: Registry hostname for login
    required: true
  username:
    description: Registry username
    required: true
  password:
    description: Registry password or token
    required: true

outputs:
  digest:
    description: Built image digest from docker/build-push-action
    value: ${{ steps.build.outputs.digest }}

runs:
  using: composite
  steps:
    - name: Verify OIDC permission
      if: inputs.push == 'true'
      shell: bash
      run: |
        set -euo pipefail
        if [[ -z "${ACTIONS_ID_TOKEN_REQUEST_URL:-}" || -z "${ACTIONS_ID_TOKEN_REQUEST_TOKEN:-}" ]]; then
          echo "Missing OIDC environment; ensure permissions: id-token: write is granted in the calling workflow" >&2
          echo "Add to your workflow/job: permissions:\n  id-token: write" >&2
          exit 1
        fi

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Docker Meta
      id: meta
      uses: docker/metadata-action@v5
      env:
        # Attach annotations at both manifest and index levels for broad registry compatibility
        DOCKER_METADATA_ANNOTATIONS_LEVELS: manifest,index
      with:
        images: ${{ inputs.images }}
        tags: ${{ inputs.meta-tags }}
        # Merge core OCI metadata derived from the GitHub context with any caller-supplied labels
        labels: |
          org.opencontainers.image.authors=${{ inputs.authors }}
          org.opencontainers.image.vendor=${{ github.repository_owner }}
          org.opencontainers.image.documentation=${{ github.server_url }}/${{ github.repository }}#readme
          org.opencontainers.image.ref.name=${{ github.ref_name }}
          ${{ inputs.labels }}
        # Emit the same core values as annotations; metadata-action will place them at the configured levels
        annotations: |
          org.opencontainers.image.authors=${{ inputs.authors }}
          org.opencontainers.image.vendor=${{ github.repository_owner }}
          org.opencontainers.image.documentation=${{ github.server_url }}/${{ github.repository }}#readme
          org.opencontainers.image.ref.name=${{ github.ref_name }}
          ${{ inputs.annotations }}

    - name: Login to Registry
      uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
      with:
        registry: ${{ inputs.registry }}
        username: ${{ inputs.username }}
        password: ${{ inputs.password }}

    - name: Build and Push
      id: build
      uses: docker/build-push-action@v6
      with:
        context: ${{ inputs.context }}
        file: ${{ inputs.context }}/${{ inputs.file }}
        push: ${{ inputs.push == 'true' }}
        tags: ${{ steps.meta.outputs.tags }}
        build-args: ${{ inputs.build-args }}
        secrets: ${{ inputs.build-secrets }}
        labels: ${{ steps.meta.outputs.labels }}
        annotations: ${{ steps.meta.outputs.annotations }}
        provenance: mode=max
        sbom: ${{ inputs.push == 'true' }}
        cache-from: type=registry,ref=${{ inputs.cache-image }},ignore-error=true
        cache-to: type=registry,ref=${{ inputs.cache-image }},mode=max,ignore-error=true

    - name: Sign Images
      if: inputs.push == 'true' && steps.build.outputs.digest
      uses: Onemind-Services-LLC/actions/actions/cosign-sign@master
      with:
        mode: docker
        docker-images: ${{ steps.meta.outputs.tags }}
        docker-digest: ${{ steps.build.outputs.digest }}
