name: Django Test Runner
description: Run Django checks, migrations, collectstatic, and tests with coverage.

inputs:
  working-directory:
    description: Directory containing manage.py
    required: false
    default: '.'
  django-settings-module-key:
    description: Env var name to export the settings module under
    required: false
    default: 'DJANGO_SETTINGS_MODULE'
  django-settings-module:
    description: Required DJANGO_SETTINGS_MODULE to export for commands
    required: true
  coverage-report:
    description: Generate a Code Coverage Summary and post a sticky PR comment
    required: false
    default: 'false'
  coverage-file:
    description: Path to coverage XML file
    required: false
    default: 'coverage.xml'
  coverage-minimum:
    description: Minimum coverage percentage threshold
    required: false
    default: '80'
  coverage-fail-below-threshold:
    description: Fail when below minimum coverage
    required: false
    default: 'true'
  coverage-show-branch:
    description: Show branch coverage column
    required: false
    default: 'true'
  coverage-report-name:
    description: Unique name for the report/comment
    required: false
    default: ''
  coverage-pull-request-number:
    description: Pull request number when not using pull_request trigger
    required: false
    default: ''
  coverage-continue-on-error:
    description: Continue on error when posting report
    required: false
    default: 'true'
  coverage-github-token:
    description: GitHub token to use for posting the PR comment (defaults to github.token)
    required: false
    default: ''
  verbosity:
    description: Django command verbosity (0-3)
    required: false
    default: '3'
  test-args:
    description: Extra arguments passed to `manage.py test`
    required: false
    default: ''
  coverage-args:
    description: Extra arguments passed to `coverage xml`
    required: false
    default: ''
  coverage-source:
    description: Comma-separated modules/paths to measure coverage for (passed to `coverage run --source`)
    required: false
    default: ''

runs:
  using: composite
  steps:
    - name: Export Django settings to env
      shell: bash
      run: |
        echo "${{ inputs.django-settings-module-key }}=${{ inputs.django-settings-module }}" >> "$GITHUB_ENV"

    - name: Install Coverage
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: pip install coverage

    - name: Check migrations
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: python manage.py makemigrations --check --dry-run

    - name: Database migrations
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: python manage.py migrate -v ${{ inputs.verbosity }}

    - name: Collect static files
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: python manage.py collectstatic --noinput

    - name: Run Django checks
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: python manage.py check -v ${{ inputs.verbosity }}

    - name: Run tests with coverage
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        CMD=(coverage run)
        if [ -n "${{ inputs.coverage-source }}" ]; then
          CMD+=("--source=${{ inputs.coverage-source }}")
        fi
        "${CMD[@]}" manage.py test ${{ inputs.test-args }}

    - name: Generate coverage XML
      shell: bash
      if: ${{ inputs.coverage-report == 'true' }}
      working-directory: ${{ inputs.working-directory }}
      run: coverage xml ${{ inputs.coverage-args }}

    - name: Coverage Reporter
      if: ${{ inputs.coverage-report == 'true' }}
      continue-on-error: ${{ inputs.coverage-continue-on-error == 'true' }}
      uses: Onemind-Services-LLC/actions/actions/cobertura-report@master
      with:
        working-directory: ${{ inputs.working-directory }}
        path: ${{ inputs.coverage-file }}
        minimum-coverage: ${{ inputs.coverage-minimum }}
        fail-below-threshold: ${{ inputs.coverage-fail-below-threshold }}
        show-branch: ${{ inputs.coverage-show-branch }}
        report-name: ${{ inputs.coverage-report-name }}
        pull-request-number: ${{ inputs.coverage-pull-request-number }}
        github-token: ${{ inputs.coverage-github-token }}

branding:
  icon: check-circle
  color: purple
