name: Cosign Sign
description: Sign Docker images or Helm charts using Sigstore Cosign (keyless OIDC).

inputs:
  mode:
    description: Signing mode (docker|helm)
    required: true

  # Docker-specific inputs
  docker-images:
    description: Newline or space separated list of image:tag to sign (e.g. repo/img:tag)
    required: false
    default: ''
  docker-digest:
    description: Image digest (sha256:...) corresponding to the built image
    required: false
    default: ''

  # Helm-specific inputs
  registry:
    description: OCI registry hostname for Helm charts (e.g., registry.example.com)
    required: false
    default: ''
  oci-namespace:
    description: OCI namespace/repo path for Helm charts (e.g., charts)
    required: false
    default: ''
  chart-packages-dir:
    description: Directory containing packaged chart .tgz files to sign (signs pushed OCI refs by name:version)
    required: false
    default: ''

runs:
  using: composite
  steps:
    - name: Install Cosign
      uses: sigstore/cosign-installer@d58896d6a1865668819e1d91763c7751a165e159 #v3.9.2

    - name: Validate Inputs
      shell: bash
      run: |
        mode='${{ inputs.mode }}'
        if [[ "$mode" != 'docker' && "$mode" != 'helm' ]]; then
          echo "Invalid mode: $mode (expected 'docker' or 'helm')" >&2
          exit 1
        fi

    - name: Sign Docker Images
      if: inputs.mode == 'docker'
      shell: bash
      env:
        IMAGES: ${{ inputs.docker-images }}
        DIGEST: ${{ inputs.docker-digest }}
      run: |
        if [[ -z "${IMAGES// /}" || -z "$DIGEST" ]]; then
          echo "No docker images or digest provided; nothing to sign." >&2
          exit 0
        fi
        # Normalize whitespace to single spaces, then split
        IFS=$' \n\t' read -r -a arr <<< "$IMAGES"
        refs=()
        for tag in "${arr[@]}"; do
          [[ -z "$tag" ]] && continue
          refs+=("${tag}@${DIGEST}")
        done
        cosign sign --yes "${refs[@]}"

    - name: Sign Helm Charts
      if: inputs.mode == 'helm' && inputs.chart-packages-dir != ''
      shell: bash
      env:
        PKG_DIR: ${{ inputs.chart-packages-dir }}
        REGISTRY: ${{ inputs.registry }}
        NAMESPACE: ${{ inputs.oci-namespace }}
      run: |
        if [[ -z "$REGISTRY" || -z "$NAMESPACE" ]]; then
          echo "registry and oci-namespace are required to derive Helm refs from packages" >&2
          exit 1
        fi
        shopt -s nullglob
        pkgs=("$PKG_DIR"/*.tgz)
        if (( ${#pkgs[@]} == 0 )); then
          echo "No packaged charts found in $PKG_DIR; nothing to sign."
          exit 0
        fi
        for pkg in "${pkgs[@]}"; do
          base=$(basename "$pkg" .tgz)
          name=${base%-*}
          version=${base##*-}
          ref="oci://$REGISTRY/$NAMESPACE/$name:$version"
          echo "Signing $ref"
          cosign sign --yes "$ref"
        done
