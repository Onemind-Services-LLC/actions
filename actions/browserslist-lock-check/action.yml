name: Browserslist Lock Check
description: Run update-browserslist-db and fail if lockfiles change.

inputs:
  node-version:
    description: Node.js version to use
    required: false
    default: '22.x'
  working-directory:
    description: Directory to run the check in
    required: false
    default: '.'
  update-command:
    description: Command to run the update
    required: false
    default: "npx --yes update-browserslist-db@latest"

runs:
  using: composite
  steps:
    - name: Detect Package Manager
      id: pm
      uses: Onemind-Services-LLC/actions/actions/detect-package-manager@master
      with:
        working-directory: ${{ inputs.working-directory }}

    - name: Setup Node
      uses: Onemind-Services-LLC/actions/actions/node-install-build@master
      with:
        package-manager: ${{ steps.pm.outputs.package-manager }}
        node-version: ${{ inputs.node-version }}
        working-directory: ${{ inputs.working-directory }}
        install: 'false'
        build: 'false'

    - name: Determine lockfiles
      id: locks
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        set -euo pipefail
        locks=()
        [[ -f package-lock.json ]] && locks+=(package-lock.json)
        [[ -f yarn.lock ]] && locks+=(yarn.lock)
        [[ -f pnpm-lock.yaml ]] && locks+=(pnpm-lock.yaml)
        if [[ ${#locks[@]} -eq 0 ]]; then
          echo "no_lockfiles=true" >> "$GITHUB_OUTPUT"
          exit 0
        fi
        {
          echo "paths<<EOF"
          printf "%s\n" "${locks[@]}"
          echo "EOF"
        } >> "$GITHUB_OUTPUT"

    - name: Update Browserslist DB
      if: steps.locks.outputs.no_lockfiles != 'true'
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: ${{ inputs.update-command }}

    - name: Git Diff Check (lockfiles)
      if: steps.locks.outputs.no_lockfiles != 'true'
      id: diff
      uses: Onemind-Services-LLC/actions/actions/git-diff-check@master
      with:
        working-directory: ${{ inputs.working-directory }}
        paths: ${{ steps.locks.outputs.paths }}
        diff-filter: ACMR
        fail-if-changed: 'true'
        compare-working-tree: 'true'

    - name: No Lockfiles Found
      if: steps.locks.outputs.no_lockfiles == 'true'
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: echo "No package-lock.json, yarn.lock, or pnpm-lock.yaml found. Skipping Browserslist lock check."
